# ==========================
# ğŸ”¥ Cursor Project Rules ğŸ”¥
# ==========================

# ğŸ”¹ Genel Proje KurallarÄ±
genel:
  dil: TÃ¼rkÃ§e
  tema: Koyu
  kodlama_dilleri:
    - JavaScript (Frontend)
    - Go (Backend)

# ğŸ”¹ Kod Stili KurallarÄ±
kod_stili:
  girinti:
    frontend: 2 boÅŸluk
    backend: tab
  maksimum_satÄ±r_uzunluÄŸu: 100
  noktalÄ±_virgÃ¼l_kullanÄ±mÄ±: true # Frontend iÃ§in geÃ§erli
  tÄ±rnak_stili: "'" # Tek tÄ±rnak kullanÄ±mÄ± (Frontend)
  yorum_dili: TÃ¼rkÃ§e

# ğŸ”¹ Ä°simlendirme StandartlarÄ±
isimlendirme:
  deÄŸiÅŸkenler: camelCase
  fonksiyonlar:
    frontend: camelCase
    backend: PascalCase # Go standartlarÄ±na uygun
  komponentler: PascalCase
  sabitler: UPPERCASE_SNAKE_CASE

# ğŸ”¹ Dosya ve Dizin YapÄ±sÄ±
dosya_yapÄ±sÄ±:
  komponentler: PascalCase.jsx
  util_dosyalarÄ±: camelCase.js/.go
  backend_controller_dosyalarÄ±: camelCaseController.go

# ğŸ”¹ Import KurallarÄ±
import_kurallarÄ±:
  sÄ±ralama:
    1: Standart KÃ¼tÃ¼phaneler (React/Go)
    2: Harici KÃ¼tÃ¼phaneler (Lodash, Axios vb.)
    3: Proje iÃ§i modÃ¼ller (Komponentler, Context, Services)
    4: Stil dosyalarÄ±
  gruplar_arasÄ±_boÅŸluk: true

# ğŸ”¹ Frontend (React) Komponent YapÄ±sÄ±
frontend_komponent_yapÄ±sÄ±:
  yapÄ±_sÄ±rasÄ±:
    1: State ve Hooklar
    2: YardÄ±mcÄ± fonksiyonlar
    3: useEffect kullanÄ±mÄ±
    4: JSX render
  props_sÄ±rasÄ±:
    1: id
    2: className
    3: style
    4: diÄŸerleri
    5: event handler'lar
  destructuring_kullanÄ±mÄ±: true

# ğŸ”¹ Stil KurallarÄ± (Frontend)
stil_kurallarÄ±:
  css_framework: Tailwind CSS
  inline_stil_kullanÄ±mÄ±: false # Login.jsx istisna
  global_stil_dosyasÄ±: styles.css

# ğŸ”¹ Backend (Go) YapÄ±sÄ± ve KurallarÄ±
backend_yapÄ±sÄ±:
  proje_mimarisi: Controller-Route-Model
  veritabanÄ±_kÃ¼tÃ¼phanesi: GORM
  hata_yÃ¶netimi:
    - c.JSON ile hata response dÃ¶n
    - Panik (panic()) yerine error handling kullan
  endpoint_standartlarÄ±:
    - Versiyonlama kullan (/api/v1/products)
    - GET isteklerinde gereksiz bÃ¼yÃ¼k response'larÄ± Ã¶nle

# ğŸ”¹ Yetkilendirme ve GÃ¼venlik StandartlarÄ±
yetkilendirme:
  frontend:
    - KullanÄ±cÄ± oturumunu context veya Redux ile yÃ¶net
    - Token saklama: HTTPOnly Cookie tercih edilir
  backend:
    - JWT veya OAuth2 kullanÄ±mÄ± zorunlu
    - Yetkisiz isteklerde 401 Unauthorized dÃ¶n
    - Admin eriÅŸimleri middleware iÃ§inde belirlenmeli

# ğŸ”¹ UyarÄ±lar ve Ä°yi Uygulamalar
uyarÄ±lar:
  - console.log kullanÄ±mÄ± kontrol edilmeli
  - KullanÄ±lmayan deÄŸiÅŸkenler temizlenmeli
  - Dosya yapÄ±sÄ±na sadÄ±k kalÄ±nmalÄ±
  - API Ã§aÄŸrÄ±larÄ± merkezi bir dosyadan yÃ¶netilmeli

tasarÄ±mlar iÃ§in material ui gibi kÃ¼thÃ¼phaneler kullanÄ±labilir

sÃ¶ylemediÄŸim yerleri kafana gÃ¶re deÄŸiÅŸtirme sadece sÃ¶ylediklerimi yap

gitignore dosyasÄ±na eklenmesi gereken bir ÅŸey olursa .gitignore dosyasÄ±na ekle