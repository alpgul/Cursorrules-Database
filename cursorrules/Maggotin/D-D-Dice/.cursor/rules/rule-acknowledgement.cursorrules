# Rule Acknowledgment and Relevance Tracking
# Ensures transparency in rule application and relevance for D&D Dice Extension

<rule>
name: rule_acknowledgment
description: Enforces explicit acknowledgment of rule relevance and application in responses for D&D Dice Extension development
filters:
  - type: event
    pattern: "response_start"
  - type: content
    pattern: "(?i)(implement|change|update|modify|create|setup|configure|dice|roll|extension)"
actions:
  - type: suggest
    message: |
      Please acknowledge rules at the start of your response:

      1. Rule Review Structure:
         ```markdown
         ### Rule Acknowledgment
         
         **Relevant Rules Applied:**
         - [Rule Name]: How it's being applied to the D&D Dice Extension
         - [Another Rule]: Specific application details for dice rolling functionality
         
         **Rules Considered But Not Relevant:**
         - [Rule Name]: Why it's not applicable to this dice extension task
         - [Another Rule]: Reason for non-relevance in this context
         
         **Implementation Following:**
         [Your implementation details for the D&D Dice Extension...]
         ```

      2. Required Components:
         - [ ] List all rules considered for this D&D Dice Extension task
         - [ ] Explicitly state which rules are being followed for dice functionality
         - [ ] Explain why certain rules aren't relevant to the current dice extension task
         - [ ] Reference specific sections of applied rules related to dice rolling or UI
         - [ ] Note any rule conflicts or priority decisions for extension development

      3. Rule Application Notes:
         - Document any rule adaptations for dice notation syntax
         - Note version-specific rule considerations for SillyTavern integration
         - Highlight any rule overlap handling between extension guidelines and dice syntax
         - Explain priority decisions when rules conflict in the extension context

      4. Memory Management Integration:
         - Update CURSOR_CONTEXT.md with rule application details
         - Document in DEVELOPMENT_LOG.md which rules were applied
         - Note any rule effectiveness for dice rolling implementation
         - Track rule application patterns for future reference

      5. D&D Dice Extension Specific Considerations:
         - Note application of dice-syntax rules to implementation
         - Reference st-extension-cursorrules-guidelines for UI components
         - Consider memory-management rules for development tracking
         - Apply initialization_and_development rules for session context

examples:
  - input: |
      "Implement a new dice type for the extension"
    output: |
      ### Rule Acknowledgment
      
      **Relevant Rules Applied:**
      - dice-syntax: Applied notation standards for the new dice type implementation
      - st-extension-cursorrules-guidelines: Following UI integration patterns for the new dice type
      - memory-management: Updating development logs with implementation details
      
      **Rules Considered But Not Relevant:**
      - git_commit: Not making a commit at this stage, only implementation
      - problem-solving: Direct implementation task, not troubleshooting
      
      **Implementation Following:**
      I'll implement the new dice type following the established patterns in index.js. The implementation will include:
      
      1. Adding the new dice type to the diceRegex pattern
      2. Implementing roll handling for the new type
      3. Adding UI elements for the new dice
      4. Updating documentation to reflect the new functionality

  - input: |
      "Update the dice rolling UI component"
    output: |
      ### Rule Acknowledgment
      
      **Relevant Rules Applied:**
      - st-extension-cursorrules-guidelines: Following section 2.3 for UI component styling
      - memory-management: Will update DEVELOPMENT_LOG.md with UI changes per section 2.2
      - initialization_and_development: Tracking development progress markers
      
      **Rules Considered But Not Relevant:**
      - dice-syntax: Not modifying dice notation, only UI components
      - api_debugging: Not addressing API issues, only UI updates
      
      **Implementation Following:**
      I'll update the dice rolling UI component by:
      
      1. Modifying the CSS in style.css for improved mobile responsiveness
      2. Updating the addDiceRollButton function in index.js
      3. Ensuring theme compatibility with SillyTavern's design system
      4. Testing on both desktop and mobile viewports

metadata:
  priority: high
  version: 1.0
  tags:
    - rule-acknowledgment
    - d&d-dice-extension
    - development-process
    - documentation
    - sillytavern-extension
</rule>