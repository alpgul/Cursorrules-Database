systemPrompt:
  role: Expert Chrome Extension Developer and Full-Stack WordPress Integration Specialist
  context: Development of a modern Web Ring chrome extension connecting with WordPress plugins
  standards:
    - Chrome Extension Manifest V3
    - WordPress REST API best practices
    - OAuth2 implementation patterns
    - Distributed system design
    - Real-time data synchronization
project:
  name: Startempire Wire Network Chrome Extension
  type: Browser Extension
  target: Chrome
  ecosystem:
    parentSite: startempirewire.com
    networkHub: startempirewire.network
    plugins:
      ringLeader:
        role: Central Controller
        repository: startempire-wire-network-ring-leader
      networkConnect:
        role: Site Connector
        repository: startempire-wire-network-connect
      screenshots:
        role: Visual Preview
        repository: startempire-wire-network-screenshots
architecture:
  pattern: Event-Driven
  components:
    background_service:
      responsibilities:
        - Authentication management
        - Data polling and caching
        - Real-time updates
        - Network status monitoring
    content_scripts:
      responsibilities:
        - DOM manipulation
        - Site integration
        - UI injection
        - Event handling
    chrome_extension_popup_ui:
      responsibilities:
        - User dashboard
        - Quick actions
        - Statistics display
        - Preferences management
    chrome_extension_side_panel:
      responsibilities:
        - Startempire Wire Network Navigation
        - Content preview & content distribution
        - Member badges
        - Interactive features
        - WireBot Integration
        - Network Settings
        - Discord Live Streaming & Chat Integration
        - Network Status & Statistics
    chrome_extension_new_tab_page:
      responsibilities:
        - Widgetized Startempire Wire Network Dashboard
        - Startempire Wire Network Navigation
        - Content preview & content distribution
        - Member badges
        - Interactive features
        - WireBot Integration
        - Network Settings
        - Discord Live Streaming & Chat Integration
        - Network Status & Statistics
    network_overlay_interface:
      responsibilities:
        - Startempire Wire Network Navigation (Web Ring Nav)
        - Content preview & content distribution (Web Ring Content)
        - Member badges
        - Interactive features
        - Discord Live Streaming & Chat Integration
core_functionality:
  oauth_authentication:
    connect_to:
      - startempirewire.com
      - startempirewire.network
    providers:
      wordpress:
        priority: primary
        features:
          - user_roles
          - member_status
      memberPress:
        priority: integrated
        features:
          - payment_verification
          - subscription_sync
          - role_mapping
          - content_restrictions
      buddyboss:
        priority: secondary
        features:
          - social_profile
          - activity_sync
      discord:
        priority: tertiary
        features:
          - chat_integration
          - streaming_service
          - role_synchronization
          - guild_management
        scopes: ["guilds.members.read"]
      openid_connect:
        priority: quaternary
        features:
          - authentication_flow
  data_streaming:
    sources:
      parent_site_content:
        endpoint: startempirewire.com/api
        data_types:
          message_boards:
            path: /message-boards
            sync_interval: real-time
          articles:
            path: /articles
            types:
              - regular
              - premium
          podcasts:
            path:
              - /audio-podcasts
              - /video-podcasts
          events:
            path: /events
            types:
              - local
              - virtual
          directory:
            path: /directory
            section: /entrepreneur
      network_data:
        endpoint: startempirewire.network/api
        data_types:
          - network_stats
          - member_data
membership_system:
  tiers:
    free:
      name: Free (Non-Verified)
      access: Public Access
      features:
        - Basic visibility
        - Limited content access
        - Standard distribution
    freeWire:
      name: FreeWire
      access: Verified Member
      features:
        - Standard content access
        - Network directory listing
        - Basic WireBot features
      distribution:
        algorithm: standard
        priority: normal
    wire:
      name: Wire
      access: Premium Member
      features:
        - Enhanced content access
        - Priority distribution
        - Advanced WireBot features
      distribution:
        algorithm: secondary
        priority: enhanced
    extraWire:
      name: ExtraWire
      access: Enterprise Member
      features:
        - Full content access
        - Premium distribution
        - Enterprise WireBot features
      distribution:
        algorithm: primary
        priority: premium
content_distribution:
  flow:
    source:
      - Content creation on parent site
      - Metadata enrichment
      - Classification by type
      - Membership level assignment
    processing:
      ringLeader:
        - Content validation
        - Distribution rules application
        - Access control verification
        - Cache management
      connect:
        - Content reception
        - Local cache management
        - UI rendering rules
        - Access control enforcement
  pathways:
    parentToRingLeader:
      content_types:
        message_boards:
          path: /message-boards
          sync: real-time
          integration: buddyBoss
        articles:
          path: /articles
          types:
            - regular
            - premium
          sync: near-real-time
        podcasts:
          audio:
            path: /audio-podcasts
            format: streaming
          video:
            path: /video-podcasts
            format: streaming
        events:
          path: /events
          types:
            - local
            - virtual
        directory:
          path: /directory
          section: /entrepreneur
    ringLeaderToConnect:
      features:
        - Network member data
        - Content previews
        - Statistics
        - Notifications
        - WireBot features
      sync: near-real-time
      caching:
        strategy: intelligent
        duration: membership-based
service_integration:
  authentication_flow:
    sequence:
      wordPressNative:
        priority: primary
        endpoints:
          base: /wp-json/startempire/v1
          auth: /auth
          status: /status
          roles: /roles
      memberPress:
        priority: secondary
        endpoints:
          base: /wp-json/startempire/v1/memberpress
          auth: /auth
          status: /status
          roles: /roles
        features:
          - Payment verification
          - Subscription management
          - Role-based access
          - Content restrictions
      buddyBoss:
        priority: tertiary
        endpoints:
          base: /wp-json/startempire/v1/buddyboss
          profile: /profile
          social: /social
          activity: /activity
        features:
          - Social profile sync
          - Group management
          - Activity tracking
          - Message board integration
      discord:
        priority: quaternary
        endpoints:
          base: /wp-json/startempire/v1/discord
          auth: /oauth
          webhook: /webhook
          streaming: /streaming
        features:
          - Real-time chat
          - Live streaming integration
          - Event broadcasting
          - Role synchronization
  real_time_communication:
    websocket:
      handler: background_service
      endpoints:
        - wss://startempirewire.network/socket
        - wss://startempirewire.com/socket
      features:
        - Live content updates
        - Chat functionality
        - Status notifications
        - Member presence
    event_streaming:
      priorities:
        high:
          - Authentication state
          - Payment events
          - Content access changes
        medium:
          - Member updates
          - Content distribution
          - Network statistics
        low:
          - Analytics data
          - Cache updates
          - Screenshot generation
  api_gateway:
    rate_limits:
      free:
        requests: 100/hour
        concurrent: 5
      freeWire:
        requests: 1000/hour
        concurrent: 10
      wire:
        requests: 5000/hour
        concurrent: 20
      extraWire:
        requests: unlimited
        concurrent: 50
    caching:
      strategies:
        membership_based:
          free: 1-hour
          freeWire: 6-hours
          wire: 12-hours
          extraWire: 24-hours
        content_type:
          articles: 4-hours
          events: 1-hour
          directory: 12-hours
          message_boards: 15-minutes
analytics_and_success:
  data_collection:
    member_metrics:
      engagement:
        - Content interaction rates
        - Feature utilization
        - Network participation
        - Growth patterns
      distribution:
        - Content reach
        - Sharing effectiveness
        - Network impact
    network_metrics:
      health:
        - Overall connectivity
        - System performance
        - Integration status
      efficiency:
        - Distribution speed
        - Resource utilization
        - Cache effectiveness
  analysis_engine:
    business_intelligence:
      indicators:
        - Member success rates
        - Network growth trends
        - Value delivery metrics
        - ROI measurements
      patterns:
        - Usage optimization
        - Resource allocation
        - System efficiency
    reporting:
      dashboards:
        member:
          - Personal analytics
          - Growth metrics
          - Network impact
        network:
          - System health
          - Distribution stats
          - Performance metrics
  member_success:
    journey_tracking:
      onboarding:
        - Integration completion
        - Feature adoption
        - Initial engagement
        - Success indicators
      growth:
        - Engagement depth
        - Feature utilization
        - Value realization
        - Network contribution
    optimization:
      continuous_improvement:
        monitoring:
          - Performance patterns
          - Usage optimization
          - Resource utilization
        enhancement:
          - Feature refinement
          - UX optimization
          - Integration efficiency
testing_and_optimization:
  testing_architecture:
    layers:
      cross_browser:
        tools:
          - web-ext
          - vitest
        scope:
          - Chrome
          - Firefox
          - Edge
          - Safari
      unit:
        scope:
          - Component functionality
          - Class methods
          - Utility functions
          - Event handlers
      integration:
        scope:
          - Plugin interactions
          - API endpoints
          - Data flow
          - Authentication chains
      end_to_end:
        scope:
          - User journeys
          - Feature workflows
          - Cross-plugin scenarios
          - Network operations
  performance_monitoring:
    metrics:
      response_times:
        - API latency
        - Content delivery
        - Authentication flow
        - Real-time updates
      resource_usage:
        - Memory consumption
        - CPU utilization
        - Network bandwidth
        - Cache efficiency
  load_management:
    distribution:
      strategies:
        - Geographic routing
        - Load balancing
        - Request queuing
        - Cache distribution
    optimization:
      caching:
        membership_based:
          free: 1-hour
          freeWire: 6-hours
          wire: 12-hours
          extraWire: 24-hours
        content_type:
          articles: 4-hours
          events: 1-hour
          directory: 12-hours
          message_boards: 15-minutes
system_maintenance:
  health_monitoring:
    checks:
      automated:
        - Service availability
        - API health
        - Database performance
        - Cache status
      manual:
        - Security audits
        - Performance reviews
        - Integration validations
        - Code quality checks
  troubleshooting:
    error_handling:
      detection:
        - Error logging
        - Performance degradation
        - Integration failures
        - User reports
      resolution:
        - Automated recovery
        - Manual intervention
        - Rollback procedures
        - Service restoration
  recovery_procedures:
    automated:
      - Service restart
      - Cache rebuild
      - Connection retry
      - State recovery
    manual:
      - Database restoration
      - Configuration reset
      - Plugin reactivation
      - Network reconnection
network_resilience:
  system_hardening:
    infrastructure_protection:
      redundancy:
        - Failover systems
        - Load balancing
        - Data replication
        - Service redundancy
      security:
        - Access control
        - Data encryption
        - Attack prevention
        - Vulnerability management
  service_continuity:
    critical_functions:
      protection:
        - Critical path monitoring
        - Service prioritization
        - Resource reservation
        - Impact minimization
      business_operations:
        - Member services
        - Content delivery
        - Network operations
        - Value delivery
governance_and_quality:
  standards:
    quality_guidelines:
      - Content standards
      - Technical requirements
      - Integration policies
      - Performance benchmarks
    member_policies:
      - Participation rules
      - Content guidelines
      - Technical compliance
      - Service standards
  evolution_management:
    innovation:
      - Feature research
      - Prototype development
      - Member feedback
      - Implementation strategy
    growth:
      - Capacity evolution
      - Service expansion
      - Feature maturity
      - Network advancement
implementation_strategy:
  deployment_sequence:
    core_setup:
      - Plugin activation hooks
      - Database initialization
      - API endpoint registration
      - Authentication setup
    integration_flow:
      - MemberPress connection
      - BuddyBoss integration
      - Discord services
      - OAuth implementation
  plugin_coordination:
    ring_leader:
      priority: primary
      dependencies:
        - Core WordPress
        - BuddyBoss Platform
        - MemberPress
      initialization:
        - Authentication services
        - Content distribution
        - Member management
        - Network statistics
    connect_plugin:
      priority: secondary
      dependencies:
        - Ring Leader Plugin
      initialization:
        - Site integration
        - UI components
        - Content display
        - Member features
    screenshots:
      priority: tertiary
      dependencies:
        - Ring Leader Plugin
        - Image processing
      initialization:
        - Cache system
        - API endpoints
        - Fallback services
        - Admin controls
  rollout_management:
    staging:
      - Development environment
      - Testing environment
      - Staging environment
      - Production deployment
    monitoring:
      - Performance metrics
      - Error tracking
      - Usage statistics
      - Integration health
network_overlay:
  components:
    trigger:
      type: floating-button
      requirements:
        - Minimalist design
        - Responsive positioning
        - Customizable appearance
        - Plugin state awareness
    popup:
      requirements:
        - Responsive interface
        - Network navigation system
        - Content preview cards
        - Real-time notifications
        - Cross-site search functionality
        - Screenshot preview integration
plugin_integration:
  connectToRingLeader:
    requirements:
      - Authentication handshake
      - Data synchronization
      - Event handling
      - Error recovery
      - Membership level verification
      - Content distribution pipeline
  connectToScreenshots:
    requirements:
      - Screenshot request handling
      - Cache coordination
      - Error fallback
      - Membership-based access control
      - Fallback service integration
      - Quality adaptation
      - Cache invalidation strategies
    content_type:
      - Standard: 1280x720 JPEG
      - Premium: 1920x1080 WebP
      - Enterprise: 2560x1440 WebP
development_environment:
  security:
    authentication:
      methods:
        - WordPress native
        - BuddyBoss SSO
        - Discord OAuth
        - OpenID Connect
      tokenManagement:
        lifetime: 24h
        refreshToken: 7d
        storage: secure-cookie
    apiSecurity:
      rateLimit:
        free: 30/minute
        public: 60/minute
        authenticated: 300/minute
        premium: 1000/minute
truthfulnessControls:
  mandatoryVerification:
    knowledgeValidation:
      beforeResponse:
        validateExpertise: true
        checkKnowledgeBounds: true
        verifySourceAvailability: true
        confirmContextUnderstanding: true
      duringResponse:
        trackConfidenceLevel: true
        monitorAssumptions: true
        validateLogicalFlow: true
        checkInternalConsistency: true
      afterResponse:
        verifyCompleteness: true
        validateAccuracy: true
        checkForOmissions: true
        confirmClarityOfUncertainty: true
    truthfulnessChecks:
      required:
        explicitUncertainty:
          trigger: any_uncertainty
          format: I am [confidence_level] certain about [specific_aspect]
          levels:
            - completely
            - mostly
            - somewhat
            - uncertain
            - cannot determine
        knowledgeGaps:
          identification: mandatory
          disclosure: immediate
          format: I don't know [specific_aspect] because [reason]
        assumptionTracking:
          explicit: true
          format: I am assuming [assumption] based on [reasoning]
          validation: continuous
  responseProtocols:
    truthfulnessEnforcement:
      beforeAnswering:
        requireKnowledgeCheck: true
        validateQuestionUnderstanding: true
        checkForAmbiguity: true
        verifyExpertiseMatch: true
      duringAnswer:
        trackCertaintyLevels: true
        flagSpeculation: true
        markInferences: true
        indicateSourceReliability: true
      correctionProtocol:
        immediateCorrection: true
        format: I need to correct [specific_point] because [reason]
        trackingRequired: true
        updateContext: true
    prohibitedBehaviors:
      absolute:
        - speculation_without_disclosure
        - overconfidence_in_uncertainty
        - assumption_without_declaration
        - partial_knowledge_without_disclosure
        - context_dropping
        - ambiguous_certainty
      conditional:
        inference: require_explicit_marking
        speculation: require_justification
        generalization: require_scope_definition
  qualityControls:
    responseValidation:
      required:
        logicalConsistency: true
        completeContext: true
        accurateScope: true
        clearUncertainty: true
      verification:
        crossCheck: true
        sourceValidation: true
        assumptionVerification: true
        contextualAccuracy: true
    clarityEnforcement:
      uncertaintyLevels:
        explicit: true
        graduated: true
        contextual: true
      knowledgeBounds:
        clear: true
        specific: true
        justified: true
  interactionRequirements:
    mandatoryElements:
      preResponse:
        - question_understanding_confirmation
        - expertise_validation
        - context_verification
      duringResponse:
        - certainty_level_indication
        - assumption_declaration
        - inference_marking
      postResponse:
        - completeness_check
        - accuracy_verification
        - uncertainty_clarity
    continuousValidation:
      trackAssumptions: true
      monitorCertainty: true
      validateConsistency: true
      verifyCompleteness: true
technical_requirements:
  project_structure:
    root_path: /Volumes/Macintosh HD/Users/vsmith/Documents/ChromeExtensionDev/startempire-wire-network
    metadata:
      project_type: chrome-extension
      framework:
        name: svelte
        build_tool: vite
    file_categories:
      config:
        - path: .env
        - path: .prettierrc
        - path: jsconfig.json
        - path: postcss.config.cjs
        - path: svelte.config.js
        - path: tailwind.config.js
        - path: vite.config.js
      build:
        - path: package-lock.json
        - path: package.json
      documentation:
        path: docs
        contents:
          directories: {}
          files:
            - name: bigpicture.mdx
              path: docs/bigpicture.mdx
              extension: .mdx
            - name: wirebot_chat_gpt_brainstorm.mdx
              path: docs/wirebot_chat_gpt_brainstorm.mdx
              extension: .mdx
        files:
          - name: README.md
            path: README.md
            extension: .md
    directories:
      public:
        path: public
        contents:
          directories:
            icons:
              path: public/icons
              contents:
                directories: {}
                files:
                  - name: icon_128.png
                    path: public/icons/icon_128.png
                    extension: .png
                  - name: icon_16.png
                    path: public/icons/icon_16.png
                    extension: .png
                  - name: icon_32.png
                    path: public/icons/icon_32.png
                    extension: .png
                  - name: icon_48.png
                    path: public/icons/icon_48.png
                    extension: .png
          files:
            - name: manifest.json
              path: public/manifest.json
              extension: .json
            - name: sidepanel.html
              path: public/sidepanel.html
              extension: .html
            - name: startempire-wire-network.html
              path: public/startempire-wire-network.html
              extension: .html
      scripts:
        path: scripts
        contents:
          directories: {}
          files:
            - name: process-html.js
              path: scripts/process-html.js
              extension: .js
            - name: structure-generator.js
              path: scripts/structure-generator.js
              extension: .js
            - name: watch-structure.js
              path: scripts/watch-structure.js
              extension: .js
      src:
        path: src
        contents:
          directories:
            lib:
              path: src/lib
              contents:
                directories:
                  components:
                    path: src/lib/components
                    contents:
                      directories:
                        navigation:
                          path: src/lib/components/navigation
                          contents:
                            directories: {}
                            files:
                              - name: Tabs.svelte
                                path: src/lib/components/navigation/Tabs.svelte
                                extension: .svelte
                        popup:
                          path: src/lib/components/popup
                          contents:
                            directories: {}
                            files:
                              - name: popup.svelte
                                path: src/lib/components/popup/popup.svelte
                                extension: .svelte
                        services:
                          path: src/lib/components/services
                          contents:
                            directories: {}
                            files:
                              - name: auth.js
                                path: src/lib/components/services/auth.js
                                extension: .js
                        sidepanel:
                          path: src/lib/components/sidepanel
                          contents:
                            directories: {}
                            files:
                              - name: sidepanel.svelte
                                path: src/lib/components/sidepanel/sidepanel.svelte
                                extension: .svelte
                        ui:
                          path: src/lib/components/ui
                          contents:
                            directories:
                              tabs:
                                path: src/lib/components/ui/tabs
                                contents:
                                  directories: {}
                                  files:
                                    - name: index.js
                                      path: src/lib/components/ui/tabs/index.js
                                      extension: .js
                                    - name: tabs-content.svelte
                                      path: src/lib/components/ui/tabs/tabs-content.svelte
                                      extension: .svelte
                                    - name: tabs-list.svelte
                                      path: src/lib/components/ui/tabs/tabs-list.svelte
                                      extension: .svelte
                                    - name: tabs-trigger.svelte
                                      path: src/lib/components/ui/tabs/tabs-trigger.svelte
                                      extension: .svelte
                            files: []
                      files: []
                  services:
                    path: src/lib/services
                    contents:
                      directories: {}
                      files:
                        - name: screenshot.js
                          path: src/lib/services/screenshot.js
                          extension: .js
                files:
                  - name: utils.js
                    path: src/lib/utils.js
                    extension: .js
            pages:
              path: src/pages
              contents:
                directories:
                  options:
                    path: src/pages/options
                    contents:
                      directories: {}
                      files:
                        - name: Options.svelte
                          path: src/pages/options/Options.svelte
                          extension: .svelte
                        - name: options.js
                          path: src/pages/options/options.js
                          extension: .js
                  popup:
                    path: src/pages/popup
                    contents:
                      directories: {}
                      files:
                        - name: Popup.svelte
                          path: src/pages/popup/Popup.svelte
                          extension: .svelte
                        - name: popup.js
                          path: src/pages/popup/popup.js
                          extension: .js
                  sidepanel:
                    path: src/pages/sidepanel
                    contents:
                      directories: {}
                      files:
                        - name: Sidepanel.svelte
                          path: src/pages/sidepanel/Sidepanel.svelte
                          extension: .svelte
                        - name: sidepanel.js
                          path: src/pages/sidepanel/sidepanel.js
                          extension: .js
                files: []
            services:
              path: src/services
              contents:
                directories: {}
                files:
                  - name: auth.js
                    path: src/services/auth.js
                    extension: .js
            styles:
              path: src/styles
              contents:
                directories: {}
                files:
                  - name: app.css
                    path: src/styles/app.css
                    extension: .css
          files:
            - name: app.css
              path: src/app.css
              extension: .css
            - name: app.html
              path: src/app.html
              extension: .html
            - name: background.js
              path: src/background.js
              extension: .js
            - name: contentScript.js
              path: src/contentScript.js
              extension: .js
    entry_points:
      background: src/background.js
      content: src/contentScript.js
      popup: src/pages/popup/popup.js
      sidepanel: src/pages/sidepanel/sidepanel.js
    files:
      - name: .cursorrules
        path: .cursorrules
        extension: ''
      - name: .editorconfig
        path: .editorconfig
        extension: ''
      - name: .prettierignore
        path: .prettierignore
        extension: ''
      - name: .sewn-cursurrules
        path: .sewn-cursurrules
        extension: ''
      - name: components.json
        path: components.json
        extension: .json
      - name: cursorrules-BAK
        path: cursorrules-BAK
        extension: ''
      - name: cursorrules-BAK2
        path: cursorrules-BAK2
        extension: ''
      - name: new.tree
        path: new.tree
        extension: .tree
      - name: startempire-wire-network.code-workspace
        path: startempire-wire-network.code-workspace
        extension: .code-workspace

ui_directives:
  description: >
    This section outlines the preferred UI libraries and guidelines for their use in the project. The goal is to ensure consistency and leverage the strengths of each library.

  libraries:
    - name: ShadCN-svelte
      url: https://shadcn-svelte.com/docs
      priority: 1
      usage: >
        ShadCN-svelte is the primary UI library for this project. It should be used for all new components and UI elements where applicable. Its integration with Svelte provides a seamless development experience and ensures consistency across the UI.

    - name: Tailwind CSS
      url: https://tailwindcss.com/docs/installation/framework-guides/sveltekit
      priority: 2
      usage: >
        Tailwind CSS is the primary CSS framework for this project. It should be used for all new components and UI elements where applicable. Its integration with Svelte provides a seamless development experience and ensures consistency across the UI.

    - name: Lucide Svelte
      url: https://lucide.dev/guide/packages/lucide-svelte
      priority: 2
      usage: >
        Lucide Svelte is the primary icon library for this project. It should be used for all new components and UI elements where applicable. Its integration with Svelte provides a seamless development experience and ensures consistency across the UI.

    - name: Melt UI
      url: https://www.melt-ui.com/docs/introduction
      priority: 2
      usage: >
        Melt UI can be used for specific components that require its unique features. It is suitable for complex UI interactions and should be considered when ShadCN-svelte does not meet the requirements.

    - name: Skeleton UI
      url: https://www.skeleton.dev/docs/get-started
      priority: 3
      usage: >
        Skeleton UI is ideal for prototyping and quickly building out UI elements. It can be used in the early stages of development or for components that require rapid iteration.

  guidelines:
    - Ensure that ShadCN-svelte is the first choice for new UI components.
    - Evaluate the specific needs of a component to determine if Melt UI or Skeleton UI is more appropriate.
    - Maintain consistency in styling and interactions across the UI by adhering to the chosen library's conventions.
    - Document any deviations from these guidelines and the rationale behind them.

accessibility:
  standards: WCAG 2.1 AA
  requirements:
    - keyboard_navigation
    - aria_labels
    - color_contrast
    - screen_reader_support

compliance:
  regulations:
    - GDPR
    - CCPA
    - COPPA
