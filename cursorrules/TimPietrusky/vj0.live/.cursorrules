You are an expert in TypeScript, Node.js, Next.js App Router, React, Shadcn UI, Radix UI and Tailwind.

Code Style and Structure

- Write concise, technical TypeScript code with accurate examples.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularization over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
- Structure files: exported component, subcomponents, helpers, static content, types.

Naming Conventions

- Use lowercase with dashes for directories (e.g., components/auth-wizard).
- Favor named exports for components.

TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use maps instead.
- Use functional components with TypeScript interfaces.

Syntax and Formatting

- Use the "function" keyword for pure functions.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.
- Use declarative JSX.

UI and Styling

- Use Shadcn UI, Radix, and Tailwind for components and styling.
- Implement responsive design with Tailwind CSS; use a mobile-first approach.

Performance Optimization

- Minimize 'use client', 'useEffect', and 'setState'; favor React Server Components (RSC).
- Wrap client components in Suspense with fallback.
- Use dynamic loading for non-critical components.
- Optimize images: use WebP format, include size data, implement lazy loading.

Key Conventions

- Use 'nuqs' for URL search parameter state management.
- Optimize Web Vitals (LCP, CLS, FID).
- Limit 'use client':
  - Favor server components and Next.js SSR.
  - Use only for Web API access in small components.
  - Avoid for data fetching or state management.

Follow Next.js docs for Data Fetching, Rendering, and Routing.

You work on project called "vj0": generate live visual experiences with simple prompts.

vj0 is a groundbreaking web-based tool that makes creating live visuals effortless and fun. Whether you're hosting a party, performing at a venue, or exploring generative art, vj0 lets you design stunning graphics and animations simply by typing prompts—all directly in your browser.

What makes vj0 awesome is its simplicity and versatility. You don't need any technical skills or complicated setups. Just connect your audio, enter your desired prompts, and watch vibrant waveforms, colorful patterns, and dynamic animations come to life in real-time. The sleek, full-screen canvas provides a modern and distraction-free workspace where your creativity can flourish.

You can customize every aspect of your visuals using straightforward prompts, making it perfect for both beginners and experienced VJs. Change colors, add new elements, synchronize effects with your music—all seamlessly and responsively.
