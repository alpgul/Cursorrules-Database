## 技术栈规范
* 主要技术：TypeScript, Next.js App Router, React, Shadcn UI, Tailwind CSS
* 开发模式：函数式编程，避免使用类

## 文件夹结构规范
项目根目录/
├── app/                # Next.js App Router & 页面
│   └── api/            # API Router API
│   └── ai-capability/  # 页面
│   └── settings/       # 页面
│   └── auth/           # 页面
│   └── collaboration/  # 页面
│   └── special-capability/      # 页面
│   └── knowledge/      # 页面
│   └── inspire/        # 页面
│   └── settings/       # 页面
├── components/         # React 组件
├── lib/               # 工具函数和服务
│   └── prompts/       # AI 提示词模板
│   └── services/      # 业务逻辑
│   └── stores/        # 缓存store
│   └── types/         # 类型定义
├── hooks/             # React Hooks
├── styles/            # 全局样式
├── public/            # 静态资源
└── prisma/            # 数据库模型

## 性能优化原则
* 优先使用 React Server Components
* 最小化 use client 指令的使用
* 组件按需加载
* 图片优化（WebP格式、懒加载）

## TypeScript 使用规范
* 所有代码使用 TypeScript
* 优先使用 interface 而非 type
* 避免使用 enum，改用 map

## 数据库使用规范
### 数据库技术选型
* 使用 PostgreSQL 作为主数据库
* 使用 Prisma 作为 ORM
* 支持向量扩展（用于 AI 相关功能）
* 代码中直接使用 import { prisma } from '@/lib/db' 的导入方式

### 数据库迁移规范
* 所有模型变更必须通过 Prisma 迁移实现
* 迁移文件命名格式：YYYYMMDDHHMMSS_descriptive_name
* 迁移文件必须包含回滚计划
* 生产环境迁移必须经过测试环境验证
### 索引使用规范
* 为常用查询字段创建索引
* 为外键关系字段创建索引
* 对于向量字段，使用专门的向量索引
## 性能优化规范
* 使用适当的字段类型和长度限制
* 合理使用索引
* 大型查询使用分页
* 批量操作使用事务
* 考虑使用 Prisma Accelerate 进行优化
## 安全规范
敏感数据必须加密存储