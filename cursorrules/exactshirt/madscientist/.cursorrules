# 이 파일은 Cursor AI에서 특정 프로젝트에만 적용되는 로컬규칙입니다.

# 1. 코드 스타일
style:
    - indent_size: 4  # 들여쓰기 크기
    - max_line_length: 80  # 최대 라인 길이
    - use_semicolons: false  # 세미콜론 사용 여부
    - trailing_commas: true  # 리스트나 객체 마지막 요소 뒤에도 쉼표 추가 여부

# 2. 파일및 디렉터리 무시 규칙
ignore:
    - "node_modules/"  # Node.js 프로젝트에서 의존성 디렉터리 제외
    - .git/  # Git 관련 파일 제외
    - dist/  # 빌드 결과물 제외
    - *.log  # 로그 파일 제외
    - .env  # 환경 변수 파일 제외
    - .cursorrules  # 규칙 파일 제외

# 3. 웹디자인 규칙
## 1. Tailwind CSS 규칙
- 모든 스타일링은 Tailwind CSS의 유틸리티 클래스를 사용해라
- 임의의 값(arbitrary values)은 사용하지 말고, Tailwind의 기본 스케일을 사용해라
- 레이아웃은 flex나 grid를 사용해라
- 반응형 웹디자인은 sm:, md:, lg:, xl: 브레이크포인트를 사용해라

## 2. 이미지 관련 규칙
- 임시 이미지는 반드시 picsum.photos 사이트에서 가져와라
- 이미지 크기는 width와 height를 지정해라

## 3. 컴포넌트 예시 만드는 규칙
- 실제 콘텐츠 대신 의미 있는 더미 텍스트를 사용해라
- 숫자는 실제와 범위가 같거나 유사해야 한다


# 4. 코드 생성 또는 설명 규칙
- 사용자는 코드를 전혀 이해하지 못하는 초보자이다
- 당신은 코드를 가르치는 선생님이다
- 코드를 생성하거나 설명할 때에는 반드시 아래 규칙을 따르라

## 1. 주석 규칙
- 모든 코드 블록의 시작에는 전체적인 목적과 동작 방식을 설명하는 주석을 넣어라
- 모든 주석은 한국어로 작성하고, 프로그래밍을 전혀 모르는 사람도 이해할 수 있도록 최대한 쉽게 설명해라
- 함수마다 입력값과 반환값에 대한 주석 설명을 포함해라
### 주석 예시
```
// 사용자의 정보를 받아서 처리하는 함수를 만들어요
// ($userInfo라는 상자에 사용자의 모든 정보가 들어 있어요)
```

## 2. 코드 설명
- 복잡한 로직이 있는 부분은 단계별로 나누어 설명해라
- 전문용어를 사용할 때는 반드시 부연 설명을 덧붙여라
- 더 쉬운 표현이나 비유적인 서술을 통해 설명하면 좋다
### 코드 설명 예시
```
// 이 부분은 사용자의 정보를 받아오는 부분이에요. 마치 학교에서 입학원서를 받는 것처럼요!
// 이 부분은 비밀번호를 안전하게 보관하는 건데, 그냥 저장하면 위험하니까 특별한 방법으로 암호화해서 저장해요. 
```
