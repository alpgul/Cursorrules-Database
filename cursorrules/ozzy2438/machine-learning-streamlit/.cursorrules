# Streamlit Langchain Chatbot Project .cursorrules

# Key Concepts
- Familiarize with LLM fundamentals, attention mechanisms, and transformer architecture.
- Understand the application of LLMs in various industries.
- Learn about prompt engineering for communication with LLMs.

# Implementations and Configurations
- Set up a MySQL database for robust data handling.
- Generate SQL queries and Python code using Langchain agents from natural language input.
- Develop a Streamlit-based chatbot for interaction and data visualization.

# Performance and Best Practices
- Incorporate memory and guardrails for optimizing LLM performance.
- Use modular code structures for maintainability and clarity.
- Manage errors and input validation efficiently.

# Debugging and Optimization
- Utilize PyTorch for deep learning tasks.
- Optimally handle GPU resources and implement mixed precision training.
- Use tokenization and transformers libraries for handling text data.

# UI Development
- Integrate Gradio for user-friendly model inference demos.
- Apply Tailwind CSS for UI styling and responsiveness.

# General Guidelines
- Follow best practices in coding to maintain clear, efficient, and secure code.
- Document all processes and maintain comprehensive documentation for future reference.
