# Cursor Rules for AlgoQuiz Project

## Code Style
- Use consistent indentation (2 spaces)
- Use semicolons at the end of statements
- Use single quotes for strings
- Use camelCase for variable and function names
- Use PascalCase for class names
- Use UPPER_SNAKE_CASE for constants

## JavaScript Best Practices
- Use strict mode ('use strict')
- Declare variables with const or let, avoid var
- Use arrow functions for callbacks
- Use template literals for string interpolation
- Use === instead of == for comparisons
- Keep functions small and focused (max 20 lines)
- Use meaningful variable and function names
- Add JSDoc comments for functions and classes

## HTML Standards
- Use semantic HTML5 elements
- Include proper meta tags
- Use lowercase for HTML attributes
- Use double quotes for HTML attributes
- Include alt text for images
- Use proper heading hierarchy (h1-h6)

## CSS Guidelines
- Use BEM naming convention for classes
- Use CSS variables for colors and common values
- Use flexbox or grid for layouts
- Keep selectors specific but not too deep
- Use mobile-first approach
- Group related properties together
- Use shorthand properties when possible

## Git Commit Messages
- Use present tense
- Start with a verb
- Keep first line under 50 characters
- Add more details in the body if needed
- Reference issues with #number

## File Organization
- Keep related files together
- Use descriptive file names
- Group assets in appropriate folders
- Keep file sizes reasonable
- Use lowercase for file names
- Use hyphens for multi-word file names

## Performance
- Minimize DOM queries
- Use event delegation
- Optimize images
- Minimize HTTP requests
- Use async/defer for scripts
- Cache DOM elements
- Use requestAnimationFrame for animations

## Testing
- Write unit tests for complex functions
- Test edge cases
- Document test requirements
- Keep tests independent
- Use meaningful test names

## Documentation
- Document public APIs
- Keep README up to date
- Document complex algorithms
- Include setup instructions
- Document dependencies
- Keep comments current

## Security
- Sanitize user input
- Use HTTPS
- Implement proper authentication
- Keep dependencies updated
- Follow security best practices
- Validate data on both client and server

## Accessibility
- Use ARIA attributes when needed
- Ensure keyboard navigation
- Maintain proper contrast ratios
- Use semantic HTML
- Test with screen readers
- Provide text alternatives 